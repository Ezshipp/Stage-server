var mongoose = require('mongoose');
var Schema = mongoose.Schema;

var Orders = new Schema({
    orderseqId: String,
    userId: { type: String, default: "" },
    OfferApplied: { type: Boolean, default: false },
    OfferID: { type: String, default: "" },
    ReferenceOfferID: { type: String, default: "" },
    WhetherStoreOrder: { type: Boolean, default: false },
    BranchID: { type: String, default: "" },
    CartID: { type: String, default: "" },
    StoreName: { type: String, default: "" },
    StorePhoneNumber: { type: String, default: "" },
    StoreEmailID: { type: String, default: "" },
    StoreAddress: { type: String, default: "" },
    Cart_Amount: { type: Number, default: 0 },
    Cart_Parcel_Wieght: { type: Number, default: 0 },
    StoreCartData: { type: Array, default: [] },
    customerName: { type: String, default: "" },
    customerPhone: { type: String, default: "" },
    customerEmail: { type: String, default: "" },
    SenderName: { type: String, default: "" },
    SenderPhoneNumber: { type: String, default: "" },
    Date: Date,
    DateSet: Boolean,
    Order_Accepted_Time: { type: Date },
    Order_Completed_Time: { type: Date },
    Order_Journey_Time: { type: String, default: '' },
    Order_Total_Time: { type: String, default: '' },
    Shipping_Distance: { type: Number, default: 0 },
    order_datetime: String,
    due_datetime: String,
    orderType: Number,
    bookingType: Number,
    pickAddress: String,
    pickup_Flat_Details: { type: String, default: "" },
    pickup_Landmark: { type: String, default: "" },
    pickLocation: {
        Longitude: Number,
        Latitude: Number
    },
    dropAddress: String,
    drop_Flat_Details: { type: String, default: "" },
    drop_Landmark: { type: String, default: "" },
    dropLocation: {
        Longitude: Number,
        Latitude: Number
    },
    chargeId: String,
    address1: String,
    address2: String,
    receiverName: String,
    receiverPhone: String,
    paymentType: Number,
    paymentId: { type: String, default: "" },
    Whether_Payment_Capture: { type: Boolean, default: false },
    Bulk_Order: { type: Boolean, default: false },
    Bulk_Price: { type: Number, default: 0 },
    Bulk_Price_Captured: { type: Boolean, default: false },
    Payment_Status: { type: String, default: "" },
    Monthly_Invoice: { type: Boolean, default: false },
    collectionType: { type: Number, default: 1 },
    itemName: String,
    itemDescription: String,
    itemImage: { type: String, default: "" },
    Location: {
        Longitude: Number,
        Latitude: Number
    },

    // menu: [{
    //     cartId: String,
    //     ItemId: String,
    //     AddOns: [{
    //         id: String,
    //         Title: String,
    //         Price: String
    //     }],
    //     PrtionId: String,
    //     ItemImageURL: String,
    //     PortionQuantity: String,
    //     PortionTitle: String,
    //     storeId: String,
    //     PortionPrice: String,
    //     ItemName: String
    // }],
    storeId: String,
    Whether_Parcel_Weight_Exceeded: { type: Boolean, default: false },
    ExceededWeight: { type: Number, default: 0 },
    ExceededAmount: { type: Number, default: 0 },
    deliverycharge: { type: String, default: '0' },

    subtotal_amount: { type: String, default: '0' }, //cLient's COD
    tip_amount: String,
    total_amount: { type: Number, default: 0 },
    item_actual_cost: { type: String, default: '' },
    Devices: {
        DeviceType: { type: Number, default: 3 },
        OS: String,
        DeviceId: String,
        DeviceToken: String,
        AppVersion: String,
        LastOnline: String,
        DeviceModel: String,
        DeviceMake: String,
        Active: String
    },
    status: Number,
    statusLog: { type: Array, default: [] },
    driversLog: [{
        driverid: String,
        status: String,
        datetime: String,
        timestamp: Number
    }],
    eventLog: [{
        status: String,
        datetime: String,
        timestamp: Number,
        driverid: String,
        address: String,
        Location: {
            latitude: Number,
            longitude: Number
        }
    }],
    comments: String,
    orderId: String,
    pickupdepo: Number,
    pickupdeponame: String,
    deliverydepo: Number,
    deliverydeponame: String,
    cancellation: [{
        reason: String,
        datetime: String,
        userType: { type: Schema.Types.Mixed },
        did: String,
        cid: String
    }],
    customerSign: String,
    app_comm_percent: Number,
    app_commission_amount: Number,
    store_earning: Number,
    app_earning: Number,
    driver_earning: Number,
    driver_app_commission: Number,
    ratingflag: { type: Number, default: 0 },
    reviewMsg: { type: String, default: "" },
    Whether_Deleted: { type: Boolean, default: false },
    Whether_Zone_Drop: { type: Boolean, default: false },
    barcodeid: { type: String, default: "" },
    ZoneID: { type: String, default: "" },
    ZoneHubID: { type: String, default: "" },
    Hub_Address: { type: String, default: "" },
    Hub_Latitude: { type: Number, default: 17.447383 },
    Hub_Longitude: { type: Number, default: 78.447383 },
    Zone_Order_Accepted: { type: Boolean, default: false },
    Zone_Order_Accepted_Time: { type: Date, default: Date.now() },
    Zone_Order_Picked: { type: Boolean, default: false },
    Zone_Order_Picked_Time: { type: Date, default: Date.now() },
    Whether_Directional_Sequence: { type: Boolean, default: false },
    Whether_PRomotional_Stored: { type: Boolean, default: false },
    ratingNum: Number
}, { collection: 'Orders' });
module.exports = mongoose.model('Orders', Orders);